/*
 ******************************************************
 * Check command template for check_vmware_esx plugin *
 *                                                    *
 * Requeriments                                       *
 *  https://github.com/BaldMansMojo/check_vmware_esx  *
 *                                                    *
 * Dependency                                         *
 *  plugin-check-command template command             *
 ******************************************************
*/


// check_vmware_esx plugin dir
const vmwareEsxPluginDir = "/tmp/check_vmware_esx"

/* main template */
template CheckCommand "check-vmware-esx-command" {
	import "plugin-check-command"

	arguments = {

		/* General options */
		
		"--trace" = "$vmware_trace$"
			
		"--timeout" = "$vmware_timeout$"

		"--ignore_warning" = {
				set_if = "$vmware_ignorewarning$"
		}

		/* Options for authentication */
		"--nosession" = {
				set_if = "$vmware_auth_nosession$"
				description = "No auth session"
		}

		"--sessionfile" = {
				description = "Vmware auth session file - no efect if $vmware_auth_nosession$ var is true"
				value = "$vmware_sessionfile$"
		}
		"--sessionfiledir" = {
				description = "Vmware auth session file directory - no efect if $vmware_auth_nosession$ var is true"
				value = "$vmware_sessionfiledir$"
		}

		"--username" = {
				description = "Vmware user"
				value = "$vmware_user$"
		}

		"--password" = {
				description = "Vmware password"
				value = "$vmware_password$"
		}

		"--authfile" = {
				description = "Autentication file content: \
						username=<username>  \
						password=<password>"
				value = "$vmware_authfile$"
		}

	}

	vars.vmware_timeout = "90"
	vars.vmware_trace = 0
	vars.vmware_ignorewarning = true
	vars.vmware_auth_nosession = false
	vars.vmware_sessionfiledir = "/var/spool/icinga2/tmp"
	//vars.vmware_user = "user"
	//vars.vmware_password = "pass"
	//vars.vmware_authfile = "/tmp/check_vmware_esx/auth"

}

/* template for datacenter /vcenter commands 
 * Remembering that the following options 
 * are not available for all command options
 * CAUTION USE
 * --include
 * --exclude
 * --isregexp
 * 
 * Dependency
 *  check-vmware-esx-command template command
*/
template CheckCommand "check-vmware-esx-dc" {
	import "check-vmware-esx-command",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-D" = "$vmware_vcenter_address$"
			"--include" = "$vmware_whitelist$"
			"--exclude" = "$vmware_blacklist$"
			"--isregexp" = {
					set_if = "$vmware_isregexp$"
			}
			"--multiline" = {
					set_if = "$vmware_multiline$"
			}
	}
	
	vars.vmware_vcenter_address = "$address$"
}
		
/*  Shows all runtime info for the datacenter/Vcenter.
    No thresholds are allowed here */
object CheckCommand "check-vmware-esx-dc-runtime" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
	}
}

/* List of vmware machines and their power state. */
object CheckCommand "check-vmware-esx-dc-runtime-listvms" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "listvms"
			"--alertonly" = {
					set_if = "$vmware_runtime_alertonly$"
			}
	}
}

/* List of VMware ESX hosts and their power state. */
object CheckCommand "check-vmware-esx-dc-runtime-listhosts" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "listhost"
			"--alertonly" = {
					set_if = "$vmware_runtime_alertonly$"
			}
	}
}

/* List of vmware clusters and their states. */
object CheckCommand "check-vmware-esx-dc-runtime-cluster" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "listcluster"
			"--alertonly" = {
					set_if = "$vmware_runtime_alertonly$"
			}
	}
}

/* All issues for the host*/
object CheckCommand "check-vmware-esx-dc-runtime-issues" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "issues"
	}
}

/*
 Overall object status (gray/green/red/yellow).
  State can be (from the docs):
  - gray    The status is unknown.
  - green   The entity is OK.
  - red     The entity definitely has a problem.
  - yellow  The entity might have a problem.
*/
object CheckCommand "check-vmware-esx-dc-runtime-status" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "status"
	}
}

/*
 Vmware Tools status. Tool status can be:
  - Installed,running and current.
  - Installed,running,but the installed version is known to
    have a grave bug and should be immediately upgraded.
  - Installed,running,version is not current
  - Installed,running,supported and newer than the
    version available on the host
  - Installed,running,supported, but a newer version is available
  - Installed,running,but the version is known to be too new
    too new to work correctly with this virtual machine
  - Installed,running,but the version is too old
  - Installed,running,but not managed by VMWare
*/
object CheckCommand "check-vmware-esx-dc-runtime-tools" {
	import "check-vmware-esx-dc",

	command = vmwareEsxPluginDir + "/check_vmware_esx"

	arguments += {
			"-S" = "runtime"
			"-s" = "listcluster"
			"--poweredonly" = {
					set_if = "$vmware_runtime_poweredonly$"
			}
			"--alertonly" = {
					set_if = "$vmware_runtime_alertonly$"
			}
	}
}
